{"version":3,"sources":["componants/CryptoContext.jsx","config/apis.jsx","componants/crosel.jsx","componants/Banner.jsx","componants/CoinTable.jsx","componants/Home.jsx","componants/Header.jsx","config/data.jsx","componants/CoinInfo.jsx","componants/CoinPage.jsx","App.js","index.js"],"names":["Crypto","createContext","CryptoContext","children","useState","currency","setCurrency","symbol","setSymbol","useEffect","Provider","value","CryptoState","useContext","CoinList","SingleCoin","id","HistoricalChart","days","TrendingCoins","useStyles","makeStyles","crosel","height","display","alignItems","color","crouselItem","flexDirection","cursor","textTransform","numberWithCommas","x","toString","replace","Crosel","trandingData","setTrandingData","classes","fetchTrandingCoins","axios","get","data","console","log","items","map","coin","profit","price_change_percentage_24h","className","to","src","image","alt","name","srcset","style","marginTop","marginBottom","fontWeight","toFixed","fontSize","current_price","mouseTracking","infinite","autoPlayInterval","animationDuration","responsive","disableButtonsControls","disableDotsControls","autoPlay","banner","background","tagline","justifyContent","textAlign","contant","paddingTop","Banner","Container","Typography","variant","fontWight","fontFamily","row","ul","CoinTable","darkTheme","createTheme","palette","primary","main","type","handleSearch","coinTable","filter","toLowerCase","includes","search","loading","setLoding","setCoinTable","setSearch","page","setPage","navigate","useNavigate","fetchCoin","ThemeProvider","theme","TextField","label","width","onChange","e","target","toLocaleLowerCase","TableContainer","Table","TableHead","TableRow","backgroundColor","TableCell","TableBody","slice","labelValue","onClick","component","scope","gap","market_cap","Math","abs","Number","LinearProgress","Pagination","count","length","shape","padding","_","window","scroll","useStyle","title","Home","flex","Header","AppBar","position","Toolbar","Select","marginLeft","MenuItem","chartDays","container","breakpoints","down","btn_container","btn","border","borderRadius","paddingLeft","paddingRight","margin","CoinInfo","historical","setHistorical","setDays","setLoading","fetchHistoricalChart","prices","labels","date","Date","time","getHours","getMinutes","toLocaleDateString","datasets","borderColor","options","elements","point","radius","day","CircularProgress","size","thickness","sidebar","heading","description","paddingBottom","marketData","alignSelf","CoinPage","useParams","setCoin","fetchChart","large","ReactHtmlParser","en","split","market_cap_rank","market_data","App","path","element","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.fe938205.chunk.js","sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\r\n\r\nconst Crypto = createContext();\r\nconst CryptoContext = ({ children }) => {\r\n  const [currency, setCurrency] = useState(\"INR\");\r\n  const [symbol, setSymbol] = useState(\"₹\");\r\n\r\n  useEffect(() => {\r\n    if (currency === -\"INR\") {\r\n      setSymbol(\"₹\");\r\n    } else if (currency === \"USD\") {\r\n      setSymbol(\"$\");\r\n    }\r\n  }, [currency]);\r\n  return (\r\n    <Crypto.Provider value={{ currency, symbol, setCurrency, setSymbol }}>\r\n      {children}\r\n    </Crypto.Provider>\r\n  );\r\n};\r\nexport default CryptoContext;\r\n\r\nexport const CryptoState = () => {\r\n  return useContext(Crypto);\r\n};\r\n","export const CoinList = (currency) =>\r\n  `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=market_cap_desc&per_page=100&page=1&sparkline=false`;\r\n\r\nexport const SingleCoin = (id) =>\r\n  `https://api.coingecko.com/api/v3/coins/${id}`;\r\n\r\nexport const HistoricalChart = (id, days, currency) =>\r\n  `https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=${currency}&days=${days}`;\r\n\r\nexport const TrendingCoins = (currency) =>\r\n  `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=gecko_desc&per_page=10&page=1&sparkline=false&price_change_percentage=24h`;\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { CryptoState } from \"./CryptoContext\";\r\nimport { TrendingCoins } from \"../config/apis\";\r\nimport { useState, useEffect } from \"react\";\r\nimport AliceCarousel from \"react-alice-carousel\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  crosel: {\r\n    height: \"50%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    color: \"red\"\r\n  },\r\n  crouselItem: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n    textTransform: \"uppercase\",\r\n    color: \"white\"\r\n  }\r\n}));\r\n\r\nexport function numberWithCommas(x) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nconst Crosel = () => {\r\n  const [trandingData, setTrandingData] = useState([]);\r\n  const { currency } = CryptoState();\r\n  const classes = useStyles();\r\n  const [symbol, setSymbol] = useState(\"₹\");\r\n  const fetchTrandingCoins = async () => {\r\n    const { data } = await axios.get(TrendingCoins(currency));\r\n    setTrandingData(data);\r\n    console.log(data);\r\n  };\r\n  useEffect(() => {\r\n    fetchTrandingCoins();\r\n    if (currency === \"INR\") {\r\n      setSymbol(\"₹\");\r\n    } else if (currency === \"USD\") {\r\n      setSymbol(\"$\");\r\n    }\r\n  }, [currency]);\r\n\r\n  const items = trandingData.map((coin) => {\r\n    let profit = coin?.price_change_percentage_24h >= 0;\r\n    console.log(profit);\r\n    return (\r\n      <Link className={classes.crouselItem} to={`/coin/${coin.id}`}>\r\n        <img\r\n          src={coin.image}\r\n          alt={coin.name}\r\n          height=\"80\"\r\n          srcset=\"\"\r\n          style={{ marginTop: 10, marginBottom: 15 }}\r\n        />\r\n        <span>\r\n          {coin.symbol}\r\n          &nbsp;\r\n          {profit && \" +\"}\r\n          <span\r\n            style={{\r\n              color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\r\n              fontWeight: 500\r\n            }}\r\n          >\r\n            {coin.price_change_percentage_24h?.toFixed(2)}%\r\n          </span>\r\n        </span>\r\n\r\n        <span style={{ fontSize: 22, fontWeight: 500 }}>\r\n          {symbol} {numberWithCommas(coin?.current_price.toFixed(2))}\r\n        </span>\r\n      </Link>\r\n    );\r\n  });\r\n  const responsive = {\r\n    0: {\r\n      items: 2\r\n    },\r\n    512: {\r\n      items: 4\r\n    }\r\n  };\r\n  return (\r\n    <div className={classes.crosel}>\r\n      <AliceCarousel\r\n        mouseTracking\r\n        infinite\r\n        autoPlayInterval={1000}\r\n        animationDuration={1500}\r\n        responsive={responsive}\r\n        disableButtonsControls\r\n        disableDotsControls\r\n        items={items}\r\n        autoPlay\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Crosel;\r\n","import { Container, makeStyles, Typography } from \"@material-ui/core\";\r\nimport Crosel from \"./crosel\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  banner: {\r\n    background:\r\n      \"url(https://images.unsplash.com/photo-1636953056323-9c09fdd74fa6?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxjb2xsZWN0aW9uLXBhZ2V8MXxUaEVUZjJyd2MwNHx8ZW58MHx8fHw%3D&w=1000&q=80)\"\r\n  },\r\n  tagline: {\r\n    display: \"flex\",\r\n    height: \"40%\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    textAlign: \"center\"\r\n  },\r\n  contant: {\r\n    height: 400,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    paddingTop: 25,\r\n    justifyContent: \"space-around\"\r\n  }\r\n}));\r\nconst Banner = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.banner}>\r\n      <Container className={classes.contant}>\r\n        <div className={classes.tagline}>\r\n          <Typography\r\n            variant=\"h2\"\r\n            style={{\r\n              color: \"#fff\",\r\n              fontWight: \"bold\",\r\n              marginBottom: 15,\r\n              fontFamily: \"Montserrat\"\r\n            }}\r\n          >\r\n            Crypto MeMo\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            style={{\r\n              color: \"darkgrey\",\r\n              textTransform: \"capitalize\",\r\n              fontFamily: \"Montserrat\"\r\n            }}\r\n          >\r\n            get all the info regarding your crypto currency.\r\n          </Typography>\r\n        </div>\r\n        <Crosel />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\nexport default Banner;\r\n","import React from \"react\";\r\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { numberWithCommas } from \"./crosel\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  createTheme,\r\n  CardContent,\r\n  Typography,\r\n  Container,\r\n  TextField,\r\n  TableContainer,\r\n  LinearProgress,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody\r\n} from \"@material-ui/core\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { CoinList } from \"../config/apis\";\r\nimport { CryptoState } from \"./CryptoContext\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\n\r\nexport function convertAmt(labelValue) {\r\n  // Nine Zeroes for Billions\r\n  return Math.abs(Number(labelValue)) >= 1.0e9\r\n    ? (Math.abs(Number(labelValue)) / 1.0e9).toFixed(2) + \"B\"\r\n    : // Six Zeroes for Millions\r\n    Math.abs(Number(labelValue)) >= 1.0e6\r\n    ? (Math.abs(Number(labelValue)) / 1.0e6).toFixed(2) + \"M\"\r\n    : // Three Zeroes for Thousands\r\n    Math.abs(Number(labelValue)) >= 1.0e3\r\n    ? (Math.abs(Number(labelValue)) / 1.0e3).toFixed(2) + \"K\"\r\n    : Math.abs(Number(labelValue));\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  row: {\r\n    background: \"#16171a\",\r\n    fontFamily: \"Montserrat\",\r\n    \"&:hover\": {\r\n      background: \"#131111\"\r\n    }\r\n  },\r\n  ul: {\r\n    \"& .MuiPaginationItem-root\": {\r\n      color: \"gold\"\r\n    }\r\n  }\r\n}));\r\n\r\nconst CoinTable = () => {\r\n  const darkTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#ffff\"\r\n      },\r\n      type: \"dark\"\r\n    }\r\n  });\r\n  const handleSearch = () => {\r\n    return coinTable.filter(\r\n      (coin) =>\r\n        coin.name.toLowerCase().includes(search) ||\r\n        coin.name.toLowerCase().includes(search)\r\n    );\r\n  };\r\n\r\n  const { currency } = CryptoState();\r\n  const [symbol, setSymbol] = useState(\"₹\");\r\n  const [loading, setLoding] = useState(false);\r\n  const [coinTable, setCoinTable] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [page, setPage] = useState(2);\r\n  const navigate = useNavigate();\r\n  console.log(search);\r\n  const fetchCoin = async () => {\r\n    const { data } = await axios.get(CoinList(currency));\r\n    setCoinTable(data);\r\n    setLoding(true);\r\n    console.log(coinTable);\r\n    console.log(loading);\r\n  };\r\n  useEffect(() => {\r\n    fetchCoin();\r\n    if (currency === \"INR\") {\r\n      setSymbol(\"₹\");\r\n    } else if (currency === \"USD\") {\r\n      setSymbol(\"$\");\r\n    }\r\n  }, [currency]);\r\n  const classes = useStyles();\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <Container style={{ textAlign: \"center\" }}>\r\n        <Typography\r\n          variant=\"h4\"\r\n          style={{ marginTop: 18, fontFamily: \"Montserrat\" }}\r\n        >\r\n          Cryptocurrency price by Market Capital\r\n        </Typography>\r\n        <TextField\r\n          label=\"Search a crypto currency\"\r\n          variant=\"outlined\"\r\n          style={{ marginBottom: 20, width: \"100%\" }}\r\n          onChange={(e) => setSearch(e.target.value.toLocaleLowerCase())}\r\n        ></TextField>\r\n        <TableContainer>\r\n          {loading ? (\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow style={{ backgroundColor: \"gold\" }}>\r\n                  {[\"Coin\", \"Price\", \"24h change\", \"Market Cap\"].map((data) => (\r\n                    <TableCell\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontWeight: \"700\",\r\n                        fontFamily: \"Montserrat\"\r\n                      }}\r\n                      key={data}\r\n                    >\r\n                      {data}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {handleSearch()\r\n                  .slice((page - 1) * 10, (page - 1) * 10 + 10)\r\n                  .map((row) => {\r\n                    const profit = row.price_change_percentage_24h > 0;\r\n                    return (\r\n                      <TableRow\r\n                        className={classes.row}\r\n                        key={row.id}\r\n                        onClick={() => {\r\n                          navigate(`/coin/${row.id}`);\r\n                        }}\r\n                        style={{ cursor: \"pointer\" }}\r\n                      >\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          scope=\"row\"\r\n                          style={{\r\n                            display: \"flex\",\r\n                            gap: 15\r\n                          }}\r\n                        >\r\n                          <img\r\n                            src={row.image}\r\n                            alt={row.name}\r\n                            height=\"50\"\r\n                            style={{ marginBottom: 10 }}\r\n                          />\r\n                          <div\r\n                            style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                          >\r\n                            <span\r\n                              style={{\r\n                                textTransform: \"uppercase\",\r\n                                fontSize: 22\r\n                              }}\r\n                            >\r\n                              {row.symbol}\r\n                            </span>\r\n                            <span style={{ color: \"darkgray\" }}>\r\n                              {row.name}\r\n                            </span>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {symbol} {numberWithCommas(row.current_price)}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {profit && \" +\"}\r\n                          <span\r\n                            style={{\r\n                              color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\r\n                              fontWeight: 500\r\n                            }}\r\n                          >\r\n                            {row.price_change_percentage_24h?.toFixed(2)}%\r\n                          </span>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <span style={{}}>\r\n                            {symbol}{\" \"}\r\n                            {numberWithCommas(convertAmt(row.market_cap))}\r\n                          </span>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          ) : (\r\n            <LinearProgress style={{ backgroundColor: \"gold\" }} />\r\n          )}\r\n        </TableContainer>\r\n        <Pagination\r\n          count={(handleSearch().length / 10).toFixed(0)}\r\n          variant=\"outlined\"\r\n          shape=\"rounded\"\r\n          color=\"primary\"\r\n          style={{\r\n            padding: 20,\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\"\r\n          }}\r\n          classes={{ ul: classes.ul }}\r\n          onChange={(_, value) => {\r\n            console.log(value);\r\n            setPage(value);\r\n            window.scroll(0, 450);\r\n          }}\r\n        />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\nexport default CoinTable;\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport Banner from \"./Banner\";\r\nimport CoinTable from \"./CoinTable\";\r\nimport { CryptoState } from \"./CryptoContext\";\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  title: {}\r\n}));\r\n\r\nconst Home = () => {\r\n  const { currency } = CryptoState();\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={classes.title}>\r\n      <Banner />\r\n      <CoinTable />\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import {\r\n  AppBar,\r\n  Container,\r\n  Toolbar,\r\n  Typography,\r\n  Select,\r\n  MenuItem,\r\n  makeStyles,\r\n  createTheme,\r\n  ThemeProvider\r\n} from \"@material-ui/core\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { CryptoState } from \"./CryptoContext\";\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  title: {\r\n    flex: 1,\r\n    color: \"gold\",\r\n    fontFamily: \"Montserrat\",\r\n    fontWeight: \"bold\",\r\n    cursor: \"pointer\"\r\n  }\r\n}));\r\n\r\nconst darkTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#ffff\"\r\n    },\r\n    type: \"dark\"\r\n  }\r\n});\r\n\r\nconst Header = () => {\r\n  const { currency, symbol, setCurrency } = CryptoState();\r\n  const classes = useStyle();\r\n  const navigate = useNavigate();\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={darkTheme}>\r\n        <AppBar color=\"transparent\" position=\"static\">\r\n          <Container>\r\n            <Toolbar>\r\n              <Typography\r\n                className={classes.title}\r\n                onClick={() => {\r\n                  navigate(\"/\");\r\n                }}\r\n              >\r\n                Crypto Memo\r\n              </Typography>\r\n              <Select\r\n                variant=\"outlined\"\r\n                style={{ width: 100, height: 40, marginLeft: 15 }}\r\n                value={currency}\r\n                onChange={(e) => {\r\n                  setCurrency(e.target.value);\r\n                }}\r\n              >\r\n                <MenuItem value={\"USD\"}>USD</MenuItem>\r\n                <MenuItem value={\"INR\"}>INR</MenuItem>\r\n              </Select>\r\n            </Toolbar>\r\n          </Container>\r\n        </AppBar>\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n};\r\nexport default Header;\r\n","export const chartDays = [\r\n  {\r\n    label: \"24 Hours\",\r\n    value: 1\r\n  },\r\n  {\r\n    label: \"30 Days\",\r\n    value: 30\r\n  },\r\n  {\r\n    label: \"3 Months\",\r\n    value: 90\r\n  },\r\n  {\r\n    label: \"1 Year\",\r\n    value: 365\r\n  }\r\n];\r\n","import {\r\n  CircularProgress,\r\n  createTheme,\r\n  makeStyles,\r\n  ThemeProvider\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport Chart from \"chart.js/auto\";\r\nimport { HistoricalChart } from \"../config/apis\";\r\nimport { CryptoState } from \"./CryptoContext\";\r\nimport { chartDays } from \"../config/data\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    width: \"75%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 25,\r\n    padding: 40,\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"100%\",\r\n      marginTop: 0,\r\n      padding: 20,\r\n      paddingTop: 0\r\n    }\r\n  },\r\n  btn_container: {\r\n    display: \"flex\",\r\n    marginTop: 20,\r\n    justifyContent: \"space-around\",\r\n    width: \"100%\"\r\n  },\r\n  btn: {\r\n    border: \"1px solid gold\",\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n    fontFamily: \"Montserrat\",\r\n    cursor: \"pointer\",\r\n    width: \"22%\",\r\n    margin: 5,\r\n    \"&:hover\": {\r\n      backgroundColor: \"gold\",\r\n      color: \"black\"\r\n    }\r\n  }\r\n}));\r\nconst CoinInfo = ({ coin }) => {\r\n  const { currency } = CryptoState();\r\n  const [historical, setHistorical] = useState([]);\r\n  const [days, setDays] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n  const [symbol, setSymbol] = useState(\"₹\");\r\n  const classes = useStyles();\r\n  const fetchHistoricalChart = async () => {\r\n    const { data } = await axios.get(HistoricalChart(coin.id, days, currency));\r\n    setHistorical(data.prices);\r\n    setLoading(true);\r\n  };\r\n  useEffect(() => {\r\n    fetchHistoricalChart();\r\n    if (currency === -\"INR\") {\r\n      setSymbol(\"₹\");\r\n    } else if (currency === \"USD\") {\r\n      setSymbol(\"$\");\r\n    }\r\n  }, [currency, days]);\r\n  const darkTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#fff\"\r\n      },\r\n      type: \"dark\"\r\n    }\r\n  });\r\n  console.log(historical);\r\n  console.log(loading);\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <div className={classes.container}>\r\n        {!loading ? (\r\n          <CircularProgress\r\n            style={{ color: \"gold\" }}\r\n            size={250}\r\n            thickness={1}\r\n          />\r\n        ) : (\r\n          <>\r\n            <Line\r\n              data={{\r\n                labels: historical.map((coin) => {\r\n                  let date = new Date(coin[0]);\r\n                  let time =\r\n                    date.getHours() > 12\r\n                      ? `${date.getHours() - 12}:${date.getMinutes()} PM`\r\n                      : `${date.getHours()}:${date.getMinutes()} AM`;\r\n                  return days === 1 ? time : date.toLocaleDateString();\r\n                }),\r\n\r\n                datasets: [\r\n                  {\r\n                    data: historical.map((coin) => coin[1]),\r\n                    label: `Price ( Past ${days} Days ) in ${currency}`,\r\n                    borderColor: \"#EEBC1D\"\r\n                  }\r\n                ]\r\n              }}\r\n              options={{\r\n                elements: {\r\n                  point: {\r\n                    radius: 1\r\n                  }\r\n                }\r\n              }}\r\n            />\r\n            <div className={classes.btn_container}>\r\n              {chartDays.map((day) => {\r\n                return (\r\n                  <span\r\n                    key={day.value}\r\n                    onClick={() => setDays(day.value)}\r\n                    className={classes.btn}\r\n                    style={{}}\r\n                  >\r\n                    {day.label}\r\n                  </span>\r\n                );\r\n              })}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n};\r\nexport default CoinInfo;\r\n","import { makeStyles, Typography, LinearProgress } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { SingleCoin } from \"../config/apis\";\r\nimport { CryptoState } from \"./CryptoContext\";\r\nimport CoinInfo from \"./CoinInfo\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { numberWithCommas } from \"./crosel\";\r\nimport { convertAmt } from \"./CoinTable\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\"\r\n    }\r\n  },\r\n  sidebar: {\r\n    width: \"30%\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"100%\"\r\n    },\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginTop: 25,\r\n    borderRight: \"2px solid grey\"\r\n  },\r\n  heading: {\r\n    fontWeight: \"bold\",\r\n    marginBottom: 20,\r\n    fontFamily: \"Montserrat\"\r\n  },\r\n  description: {\r\n    width: \"100%\",\r\n    fontFamily: \"Montserrat\",\r\n    padding: 25,\r\n    paddingBottom: 15,\r\n    paddingTop: 0,\r\n    textAlign: \"justify\"\r\n  },\r\n  marketData: {\r\n    alignSelf: \"start\",\r\n    padding: 25,\r\n    paddingTop: 10,\r\n    width: \"100%\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-around\"\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\"\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      alignItems: \"start\"\r\n    }\r\n  }\r\n}));\r\nconst CoinPage = () => {\r\n  const { currency } = CryptoState();\r\n  const { id } = useParams();\r\n  const [coin, setCoin] = useState([]);\r\n  const [symbol, setSymbol] = useState(\"₹\");\r\n  const [loading, setLoading] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const fetchChart = async () => {\r\n    const { data } = await axios.get(SingleCoin(id));\r\n    setCoin(data);\r\n    setLoading(true);\r\n  };\r\n  useEffect(() => {\r\n    fetchChart();\r\n    if (currency === \"INR\") {\r\n      setSymbol(\"₹\");\r\n    } else if (currency === \"USD\") {\r\n      setSymbol(\"$\");\r\n    }\r\n  }, [currency]);\r\n  console.log(coin);\r\n  console.log(loading);\r\n  if (!loading) return <LinearProgress style={{ backgroundColor: \"gold\" }} />;\r\n  else {\r\n    return (\r\n      <>\r\n        <div className={classes.container}>\r\n          <div className={classes.sidebar}>\r\n            <img\r\n              src={coin?.image.large}\r\n              alt={coin?.name}\r\n              height=\"200\"\r\n              style={{ marginBottom: 20 }}\r\n            />\r\n            <Typography variant=\"h3\" className={classes.heading}>\r\n              {coin?.name}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" className={classes.description}>\r\n              {ReactHtmlParser(coin?.description.en.split(\". \")[0])}.\r\n            </Typography>\r\n            <div className={classes.marketData}>\r\n              <span style={{ display: \"flex\" }}>\r\n                <Typography variant=\"h5\" className={classes.heading}>\r\n                  Rank:\r\n                </Typography>\r\n                &nbsp; &nbsp;\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  style={{\r\n                    fontFamily: \"Montserrat\"\r\n                  }}\r\n                >\r\n                  {numberWithCommas(coin?.market_cap_rank)}\r\n                </Typography>\r\n              </span>\r\n\r\n              <span style={{ display: \"flex\" }}>\r\n                <Typography variant=\"h5\" className={classes.heading}>\r\n                  Current Price:\r\n                </Typography>\r\n                &nbsp; &nbsp;\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  style={{\r\n                    fontFamily: \"Montserrat\"\r\n                  }}\r\n                >\r\n                  {symbol}{\" \"}\r\n                  {numberWithCommas(\r\n                    coin?.market_data.current_price[currency.toLowerCase()]\r\n                  )}\r\n                </Typography>\r\n              </span>\r\n              <span style={{ display: \"flex\" }}>\r\n                <Typography variant=\"h5\" className={classes.heading}>\r\n                  Market Cap:\r\n                </Typography>\r\n                &nbsp; &nbsp;\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  style={{\r\n                    fontFamily: \"Montserrat\"\r\n                  }}\r\n                >\r\n                  {symbol}{\" \"}\r\n                  {numberWithCommas(\r\n                    coin?.market_data.market_cap[currency.toLowerCase()]\r\n                      .toString()\r\n                      .slice(0, -6)\r\n                  )}\r\n                  M\r\n                </Typography>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <CoinInfo coin={coin} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n};\r\nexport default CoinPage;\r\n","import \"./styles.css\";\nimport Home from \"./componants/Home\";\nimport Header from \"./componants/Header\";\nimport CoinPage from \"./componants/CoinPage\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nexport default function App() {\n  return (\n    <>\n      <BrowserRouter>\n        <div className=\"App\">\n          <Header />\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/coin/:id\" element={<CoinPage />} />\n          </Routes>\n        </div>\n      </BrowserRouter>\n    </>\n  );\n}\n","import \"react-alice-carousel/lib/alice-carousel.css\";\nimport { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport CryptoContext from \"./componants/CryptoContext\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <CryptoContext>\n      <App />\n    </CryptoContext>\n  </StrictMode>\n);\n"],"sourceRoot":""}